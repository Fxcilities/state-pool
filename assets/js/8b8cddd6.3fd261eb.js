"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9014],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(g,s(s({ref:t},l),{},{components:n})):r.createElement(g,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9330:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={sidebar_position:3},u="Getting Started",c={unversionedId:"introduction/getting_started",id:"introduction/getting_started",title:"Getting Started",description:"Using state-pool to manage global state is very simple, all you need to do is",source:"@site/docs/introduction/getting_started.md",sourceDirName:"introduction",slug:"/introduction/getting_started",permalink:"/state-pool/docs/introduction/getting_started",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction/getting_started.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/state-pool/docs/introduction/installation"},next:{title:"Store",permalink:"/state-pool/docs/basic_concepts/store"}},l={},p=[],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Using ",(0,a.kt)("strong",{parentName:"p"},"state-pool")," to manage global state is very simple, all you need to do is"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a store(which is basically a container for your global state)"),(0,a.kt)("li",{parentName:"ol"},"Create and initialize a global state by using ",(0,a.kt)("inlineCode",{parentName:"li"},"store.setState")),(0,a.kt)("li",{parentName:"ol"},"Use your global state in your component through ",(0,a.kt)("inlineCode",{parentName:"li"},"store.useState")," hooks")),(0,a.kt)("p",null,"These three steps summarises pretty much everything you need to use ",(0,a.kt)("strong",{parentName:"p"},"state-pool"),"."),(0,a.kt)("p",null,"Below are few examples showing how to use ",(0,a.kt)("strong",{parentName:"p"},"state-pool")," to manage global states."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// Example 1.\nimport React from \'react\';\nimport { createStore } from \'state-pool\';\n\n\nconst store = createStore();  // Create store for storing our global state\nstore.setState("count", 0);  // Create "count" global state and add it to the store\n\nfunction ClicksCounter(props){\n    // Use "count" global state\n    const [count, setCount] = store.useState("count");\n\n    const incrementCount = (e) => {\n        setCount(count+1)\n    }\n\n    return (\n        <div>\n            Count: {count}\n            <br/>\n            <button onClick={incrementCount}>Click</button>\n        </div>\n    );\n}\n\nReactDOM.render(ClicksCounter, document.querySelector("#root"));\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// Example 2.\nimport React from \'react\';\nimport { createStore } from \'state-pool\';\n\n\nconst store = createStore();  // Create store for storing our global state\nstore.setState("user", {name: "Yezy", age: 25});\n\nfunction UserInfo(props){\n    const [user, setUser, updateUser] = store.useState("user");\n\n    const updateName = (e) => {\n        updateUser(user => {\n            user.name = e.target.value;\n        });\n    }\n\n    return (\n        <div>\n            Name: {user.name}\n            <br/>\n            <input type="text" value={user.name} onChange={updateName}/>\n        </div>\n    );\n}\n\nReactDOM.render(UserInfo, document.querySelector("#root"));\n')))}m.isMDXComponent=!0}}]);