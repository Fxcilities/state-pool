"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5004],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(r),f=s,g=p["".concat(c,".").concat(f)]||p[f]||b[f]||o;return r?n.createElement(g,a(a({ref:t},l),{},{components:r})):n.createElement(g,a({ref:t},l))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6719:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return b}});var n=r(7462),s=r(3366),o=(r(7294),r(3905)),a=["components"],i={sidebar_position:6},c="store.subscribe",u={unversionedId:"api_reference/high_level_api/store.subscribe",id:"api_reference/high_level_api/store.subscribe",title:"store.subscribe",description:"If you want to listen to changes in a store you can subscribe to it by using store.subscribe. it accepts an observer function. For example",source:"@site/docs/api_reference/high_level_api/store.subscribe.md",sourceDirName:"api_reference/high_level_api",slug:"/api_reference/high_level_api/store.subscribe",permalink:"/docs/api_reference/high_level_api/store.subscribe",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/high_level_api/store.subscribe.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"store.getState",permalink:"/docs/api_reference/high_level_api/store.getState"},next:{title:"store.remove",permalink:"/docs/api_reference/high_level_api/store.remove"}},l={},b=[],p={toc:b};function f(e){var t=e.components,r=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"storesubscribe"},"store.subscribe"),(0,o.kt)("p",null,"If you want to listen to changes in a store you can subscribe to it by using ",(0,o.kt)("inlineCode",{parentName:"p"},"store.subscribe"),". it accepts an observer function. For example "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Subscribe to store changes\nconst unsubscribe = store.subscribe(function(key: String, value: Any){\n    // key is the key for a global state that has changed \n    // value is the new value of a global state\n})\n\n// You can unsubscribe by calling the result\nunsubscribe();\n")),(0,o.kt)("p",null,"If you want to subscribe to a single global state you can use "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Subscribe to store changes\nconst unsubscribe = store.getState(key).subscribe(function(value){\n    // value is the new value of a global state\n})\n\n// You can unsubscribe by calling the result\nunsubscribe();\n")),(0,o.kt)("p",null,"You can even subscribe to a deeply nested state by using a selector as "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"store.getState(key).subscribe({\n    observer:  function(value){\n        // value is the new value of a global state \n    },\n    selector: function(value){\n        return  selected_state\n    })\n})\n")),(0,o.kt)("p",null,"With this observer function will only be called when the selected state changes"))}f.isMDXComponent=!0}}]);