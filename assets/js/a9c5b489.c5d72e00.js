"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1776],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4345:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},c="useGlobalStateReducer",s={unversionedId:"api_reference/low_level_api/useGlobalStateReducer",id:"api_reference/low_level_api/useGlobalStateReducer",title:"useGlobalStateReducer",description:"This is an alternative to useGlobalState, it works just like React.useReducer hook((If you\u2019re familiar with React.useReducer, you already know how this works). It accepts a reducer and a global state object as parameters, it returns the current state paired with a dispatch method. In addition to the two parameters it also accept another optinal perameter which is the configuration object, available configurations are selector and patcher they work exactly the same just like in useGlobalState.",source:"@site/docs/api_reference/low_level_api/useGlobalStateReducer.md",sourceDirName:"api_reference/low_level_api",slug:"/api_reference/low_level_api/useGlobalStateReducer",permalink:"/docs/api_reference/low_level_api/useGlobalStateReducer",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/low_level_api/useGlobalStateReducer.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"useGlobalState",permalink:"/docs/api_reference/low_level_api/useGlobalState"},next:{title:"Typing State",permalink:"/docs/api_reference/typing-state"}},u={},p=[],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"useglobalstatereducer"},"useGlobalStateReducer"),(0,o.kt)("p",null,"This is an alternative to ",(0,o.kt)("inlineCode",{parentName:"p"},"useGlobalState"),", it works just like ",(0,o.kt)("inlineCode",{parentName:"p"},"React.useReducer")," hook((If you\u2019re familiar with ",(0,o.kt)("inlineCode",{parentName:"p"},"React.useReducer"),", you already know how this works). It accepts a reducer and a global state object as parameters, it returns the current state paired with a dispatch method. In addition to the two parameters it also accept another optinal perameter which is the configuration object, available configurations are ",(0,o.kt)("inlineCode",{parentName:"p"},"selector")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"patcher")," they work exactly the same just like in ",(0,o.kt)("inlineCode",{parentName:"p"},"useGlobalState"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Signature\nuseGlobalStateReducer(\n    reducer: Function,\n    globalState: GlobalState,\n    config?: {selector: Function, patcher: Function}\n)\n")),(0,o.kt)("p",null,"Below is a simple example showing how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"useGlobalStateReducer")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const initialGlobalState = {\n    name: "Yezy",\n    age: 25,\n    email: "yezy@me.com"\n}\n\nconst user = createGlobalState(initialGlobalState);\n\nfunction myReducer(state, action){\n    // This could be any reducer\n    // Do whatever you want to do here\n    return newState\n}\n\nfunction Component(props){\n    const [name, dispatch] = useGlobalStateReducer(myReducer, user);\n    \n    // Other stuff ...\n}\n')),(0,o.kt)("p",null,"Below is an example with ",(0,o.kt)("inlineCode",{parentName:"p"},"selector")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"patcher")," parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const initialGlobalState = {\n    name: "Yezy",\n    age: 25,\n    email: "yezy@me.com"\n}\n\nconst user = createGlobalState(initialGlobalState);\n\n\nfunction myReducer(state, action){\n    // This could be any reducer\n    // Do whatever you want to do here\n    return newState\n}\n\nfunction UserInfo(props){\n    const selector = (user) => user.name;\n    const patcher = (user, name) => {user.name = name};\n    \n    const [name, dispatch] = useGlobalStateReducer(myReducer, user, {selector, patcher});\n\n    // Other stuffs\n}\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"useGlobalState")," hook is derived from ",(0,o.kt)("inlineCode",{parentName:"p"},"useGlobalStateReducer")," hook, also this hook is used to implement ",(0,o.kt)("inlineCode",{parentName:"p"},"store.useReducer"),"."))))}m.isMDXComponent=!0}}]);