"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5004],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=u(r),f=o,g=b["".concat(c,".").concat(f)]||b[f]||p[f]||s;return r?n.createElement(g,a(a({ref:t},l),{},{components:r})):n.createElement(g,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},6719:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),a=["components"],i={sidebar_position:6},c="store.subscribe",u={unversionedId:"api_reference/high_level_api/store.subscribe",id:"api_reference/high_level_api/store.subscribe",title:"store.subscribe",description:"If you want to listen to changes in a store you can subscribe to it by using store.subscribe. it accepts an observer function. For example",source:"@site/docs/api_reference/high_level_api/store.subscribe.md",sourceDirName:"api_reference/high_level_api",slug:"/api_reference/high_level_api/store.subscribe",permalink:"/state-pool/docs/api_reference/high_level_api/store.subscribe",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/high_level_api/store.subscribe.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"store.getState",permalink:"/state-pool/docs/api_reference/high_level_api/store.getState"},next:{title:"store.remove",permalink:"/state-pool/docs/api_reference/high_level_api/store.remove"}},l={},p=[],b={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"storesubscribe"},"store.subscribe"),(0,s.kt)("p",null,"If you want to listen to changes in a store you can subscribe to it by using ",(0,s.kt)("inlineCode",{parentName:"p"},"store.subscribe"),". it accepts an observer function. For example "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// Subscribe to store changes\nconst unsubscribe = store.subscribe(function(key: String, value: Any){\n    // key is the key for a global state that has changed \n    // value is the new value of a global state\n})\n\n// You can unsubscribe by calling the result\nunsubscribe();\n")),(0,s.kt)("p",null,"If you want to subscribe to a single global state you can use "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// Subscribe to store changes\nconst unsubscribe = store.getState(key).subscribe(function(value){\n    // value is the new value of a global state\n})\n\n// You can unsubscribe by calling the result\nunsubscribe();\n")),(0,s.kt)("p",null,"You can even subscribe to a deeply nested state by using a selector as "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"store.getState(key).subscribe({\n    observer:  function(value){\n        // value is the new value of a global state \n    },\n    selector: function(value){\n        return  selected_state\n    })\n})\n")),(0,s.kt)("p",null,"With this observer function will only be called when the selected state changes"))}f.isMDXComponent=!0}}]);