"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2913],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=i(r),m=a,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||o;return r?n.createElement(d,u(u({ref:t},l),{},{components:r})):n.createElement(d,u({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,u=new Array(o);u[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,u[1]=s;for(var i=2;i<o;i++)u[i]=r[i];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5229:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),u=["components"],s={sidebar_position:4},c="Typing State",i={unversionedId:"api_reference/typing-state",id:"api_reference/typing-state",title:"Typing State",description:"All state related functions support implicity and explicity typing",source:"@site/docs/api_reference/typing-state.md",sourceDirName:"api_reference",slug:"/api_reference/typing-state",permalink:"/state-pool/docs/api_reference/typing-state",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/typing-state.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"useGlobalStateReducer",permalink:"/state-pool/docs/api_reference/low_level_api/useGlobalStateReducer"}},l={},p=[],f={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"typing-state"},"Typing State"),(0,o.kt)("p",null,"All state related functions support implicity and explicity typing "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"store.setState<number>('count', 0);\n\nstore.useState<number>('count');\n\nstore.useReducer<number>(reducer, 'count');\n\n// For none key based\nconst count = createGlobalState<number>(0);\n\nuseGlobalState<number>(count);\n\nuseGlobalStateReducer<number>(reducer, count);\n\n\n// Typing with selector\nstore.setState<{name: string, age: number}>('user', {name: 'Yezy', age: 25});\n\nstore.useState<string>('user', {selector: user => user.name});\nstore.useState<number>('age', {selector: user => user.age});\n\nstore.useReducer<string>(reducer, 'user', {selector: user => user.name});\nstore.useReducer<number>(reducer, 'user', {selector: user => user.age});\n\n// For none key based\nconst user = createGlobalState<{name: string, age: number}>({name: 'Yezy', age: 25});\n\nuseGlobalState<string>(user, {selector: user => user.name});\nuseGlobalState<number>(user, {selector: user => user.age});\n\nuseGlobalStateReducer<string>(reducer, user, {selector: user => user.name});\nuseGlobalStateReducer<number>(reducer, user, {selector: user => user.age});\n")))}m.isMDXComponent=!0}}]);