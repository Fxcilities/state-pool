"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3721],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return d}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),p=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),m=p(a),d=n,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return a?r.createElement(f,i(i({ref:e},u),{},{components:a})):r.createElement(f,i({ref:e},u))}));function d(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8965:function(t,e,a){a.r(e),a.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],l={sidebar_position:1},s="Motivation",p={unversionedId:"introduction/motivation",id:"introduction/motivation",title:"Motivation",description:"Build Status",source:"@site/docs/introduction/motivation.md",sourceDirName:"introduction",slug:"/introduction/motivation",permalink:"/state-pool/docs/introduction/motivation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction/motivation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/state-pool/docs/introduction/installation"}},u={},c=[{value:"Features &amp; Advantages",id:"features--advantages",level:2},{value:"Architectural Diagram",id:"architectural-diagram",level:2},{value:"State Flow",id:"state-flow",level:2}],m={toc:c};function d(t){var e=t.components,a=(0,n.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/yezyilomo/state-pool/actions/workflows/node.js.yml/badge.svg?branch=master",alt:"Build Status"}),"\n",(0,o.kt)("a",{parentName:"p",href:"https://bundlephobia.com/result?p=state-pool"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/bundlephobia/minzip/state-pool?label=bundle-size&style=flat",alt:"Build Size"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/state-pool"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/state-pool?style=flat",alt:"Version"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/state-pool"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/dt/state-pool.svg?style=flat",alt:"Downloads"}))),(0,o.kt)("p",null,"State pool is a React state management library based on global variables and react hooks."),(0,o.kt)("h2",{id:"features--advantages"},"Features & Advantages"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Simple, familiar, flexible and very minimal core API but powerful"),(0,o.kt)("li",{parentName:"ul"},"Built-in support for state persistence"),(0,o.kt)("li",{parentName:"ul"},"Very easy to learn because its API is very similar to react state hook's API"),(0,o.kt)("li",{parentName:"ul"},"Support selecting deeply nested state"),(0,o.kt)("li",{parentName:"ul"},"Support creating global state dynamically"),(0,o.kt)("li",{parentName:"ul"},"Can be used outside react components"),(0,o.kt)("li",{parentName:"ul"},"Support both key based and non-key based global state"),(0,o.kt)("li",{parentName:"ul"},"States are stored as global variables(Can be used anywhere)"),(0,o.kt)("li",{parentName:"ul"},"Doesn't wrap your app in context providers"),(0,o.kt)("li",{parentName:"ul"},"Very organized API, You can do almost everything with a single import")),(0,o.kt)("h2",{id:"architectural-diagram"},"Architectural Diagram"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/yezyilomo/state-pool/master/docs/images/architecture_diagram.png",alt:"Architecture Diagram"})),(0,o.kt)("h2",{id:"state-flow"},"State Flow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a global state")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Subscribe a component(s) to a created global state")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If a component wants to update a global state, it sends update request")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"When a global state receives update request, it performs the update and send signal to all components subscribed to it for them to update themselves(re-render)"))))}d.isMDXComponent=!0}}]);